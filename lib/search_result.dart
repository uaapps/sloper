import 'package:flutter/material.dart';
import 'package:sloper/search_word.dart';
import 'word_description.dart';
import 'word_translations.dart';
import 'word_related_phrases.dart';
import 'package:provider/provider.dart';

class SearchResult extends StatelessWidget {
  bool _showResult(SearchWord word) =>
      word.searchWord.isNotEmpty && word.searchWord.toLowerCase() == "kaffee";

  List<Widget> _renderNotFoundResult(String word) => [
        word.isEmpty
            ? Text("–°–ø—Ä–æ–±—É–π—Ç–µ —â–æ—Å—å –ø–æ—à—É–∫–∞—Ç–∏.")
            : Text(
                "–ü–æ–∫–∏—â–æ, –≤ –Ω–∞—Å –Ω–µ–º–∞—î –Ω—ñ—á–æ–≥–æ –¥–ª—è —Å–ª–æ–≤–∞: $word. –ú–∏ —Å—Ç–∞—Ä–∞–Ω–Ω–æ –ø—Ä–∞—Ü—é—î–º–æ –Ω–∞–¥ —Ç–∏–º, —â–æ–± —Ü–µ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏. üôå"),
      ];

  List<Widget> _renderSearchResult() => [
        WordDescription(
          word: "der Kaffee",
          description: "–Ü–º–µ–Ω–Ω–∏–∫ —á–æ–ª–æ–≤—ñ—á–æ–≥–æ —Ä–æ–¥—É. –ú–Ω–æ–∂–∏–Ω–∏ –Ω–µ –º–∞—î.",
        ),
        Divider(),
        WordTranslations(
          translation: "–∫–∞–≤–∞",
        ),
        Divider(),
        WordRelatedPhrases(
          phrase: "einen Kaffee, bitte.",
          phraseTranslation: "–æ–¥–Ω—É –∫–∞–≤—É, –±—É–¥—å –ª–∞—Å–∫–∞.",
        ),
      ];

  List<Widget> _renderResult(SearchWord word) {
    if (!_showResult(word)) return _renderNotFoundResult(word.searchWord);

    return _renderSearchResult();
  }

  @override
  Widget build(BuildContext context) => Container(
        margin: EdgeInsets.fromLTRB(60.0, 40.0, 60.0, 0.0),
        child: Consumer<SearchWord>(
          builder: (context, searchWord, child) => Column(
            children: _renderResult(searchWord),
          ),
        ),
      );
}
